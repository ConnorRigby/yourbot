{
  "basePath": "/api",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "Bot": {
      "description": "Describes a bot object",
      "example": {
        "application_id": "123455",
        "name": "MiataBot",
        "public_key": "12345",
        "token": "super secret"
      },
      "properties": {
        "application_id": {
          "description": "Discord ID",
          "type": "integer"
        },
        "deploy_status": {
          "description": {
            "$ref": "#/definitions/BotDeployStatus"
          },
          "type": "string"
        },
        "name": {
          "description": "Unique Name of the Bot",
          "type": "string"
        },
        "public_key": {
          "description": "Discord public key",
          "type": "string"
        },
        "token": {
          "description": "Authentication token",
          "type": "string"
        }
      },
      "required": [
        "deploy_status",
        "public_key",
        "application_id",
        "token",
        "name"
      ],
      "title": "Bot",
      "type": "object"
    },
    "BotDeployStatus": {
      "description": "Values are changed in the websocket connection",
      "enum": [
        "live",
        "stop",
        "error"
      ],
      "title": "Bot deployment status",
      "type": "object"
    },
    "BotEvent": {
      "description": "simple key/value log",
      "properties": {
        "content": {
          "description": "content of the event",
          "type": "string"
        },
        "inserted_at": {
          "description": "datetime",
          "type": "string"
        },
        "name": {
          "description": "name of the event",
          "type": "string"
        },
        "updated_at": {
          "description": "datetime",
          "type": "string"
        }
      },
      "required": [
        "updated_at",
        "inserted_at",
        "content",
        "name"
      ],
      "title": "Bot Event",
      "type": "object"
    },
    "CreateBot": {
      "description": "Params for creating a bot",
      "example": {
        "bot": {
          "application_id": "123455",
          "name": "MiataBot",
          "public_key": "12345",
          "token": "super secret"
        }
      },
      "properties": {
        "bot": {
          "properties": {
            "application_id": {
              "description": "Discord ID",
              "type": "integer"
            },
            "name": {
              "description": "Unique Name of the Bot",
              "type": "string"
            },
            "public_key": {
              "description": "Discord public key",
              "type": "string"
            },
            "token": {
              "description": "Authentication token",
              "type": "string"
            }
          },
          "required": [
            "public_key",
            "application_id",
            "token",
            "name"
          ],
          "type": "object"
        }
      },
      "title": "Create Bot",
      "type": "object"
    },
    "CreateEnvironmentVariable": {
      "description": "Params for creating an env var",
      "properties": {
        "environment_variable": {
          "properties": {
            "key": {
              "description": "Unique name of the variable",
              "type": "string"
            },
            "value": {
              "description": "secret value",
              "type": "string"
            }
          },
          "required": [
            "value",
            "key"
          ],
          "type": "object"
        }
      },
      "title": "Create env var",
      "type": "object"
    },
    "CreateFile": {
      "description": "Params for creating a file",
      "properties": {
        "file": {
          "properties": {
            "content": {
              "description": "content of the file",
              "type": "string"
            },
            "name": {
              "description": "Unique name of the file",
              "type": "string"
            }
          },
          "required": [
            "content",
            "name"
          ],
          "type": "object"
        }
      },
      "title": "Create file",
      "type": "object"
    },
    "CreateUser": {
      "description": "Essentially the `me` object from Discord",
      "example": {
        "discord_oauth": {
          "avatar": "fd01df5305fdb629a8333057e19bb41f",
          "discord_user_id": "316741621498511363",
          "discriminator": "0690",
          "email": "konnorrigby@gmail.com",
          "username": "PressY4Pie"
        }
      },
      "properties": {
        "discord_oauth": {
          "properties": {
            "avatar": {
              "description": "User discord avatar",
              "type": "string"
            },
            "discord_user_id": {
              "description": "User discord id",
              "type": "string"
            },
            "discriminator": {
              "description": "User discord discriminator",
              "type": "string"
            },
            "email": {
              "description": "User email",
              "type": "string"
            },
            "username": {
              "description": "User discord username",
              "type": "string"
            }
          },
          "required": [
            "email",
            "discriminator",
            "avatar",
            "username",
            "discord_user_id"
          ],
          "type": "object"
        }
      },
      "title": "Create User",
      "type": "object"
    },
    "EnvironmentVariable": {
      "description": "Describes an env var",
      "example": {
        "key": "SECRET_TOKEN",
        "value": "SUPER.SECRET.VALUE"
      },
      "properties": {
        "key": {
          "description": "Unique name of the variable",
          "type": "string"
        },
        "value": {
          "description": "secret value",
          "type": "string"
        }
      },
      "required": [
        "value",
        "key"
      ],
      "title": "EnvironmentVariable",
      "type": "object"
    },
    "File": {
      "description": "Describes a file",
      "example": {
        "content": "print('hello, world')",
        "name": "client.py",
        "uuid": "1503f7f7-1d90-4619-b969-e4ca9e8c1b45"
      },
      "properties": {
        "content": {
          "description": "content of the file",
          "type": "string"
        },
        "name": {
          "description": "Unique name of the file",
          "type": "string"
        },
        "uuid": {
          "description": "unique id",
          "type": "string"
        }
      },
      "required": [
        "uuid",
        "content",
        "name"
      ],
      "title": "File",
      "type": "object"
    },
    "User": {
      "description": "Essentially the `me` object from Discord",
      "example": {
        "avatar": "fd01df5305fdb629a8333057e19bb41f",
        "discord_user_id": "316741621498511363",
        "discriminator": "0690",
        "username": "PressY4Pie"
      },
      "properties": {
        "avatar": {
          "description": "User discord avatar",
          "type": "string"
        },
        "discord_user_id": {
          "description": "User discord id",
          "type": "string"
        },
        "discriminator": {
          "description": "User discord discriminator",
          "type": "string"
        },
        "username": {
          "description": "User discord username",
          "type": "string"
        }
      },
      "required": [
        "discriminator",
        "avatar",
        "username",
        "discord_user_id"
      ],
      "title": "User",
      "type": "object"
    },
    "UserToken": {
      "description": "used for controlling a bot",
      "properties": {
        "encoded": {
          "description": "all of the above fields but encoded as a jwt",
          "type": "string"
        },
        "exp": {
          "description": "When the token expires",
          "type": "integer"
        },
        "iss": {
          "description": "hostname that issued the token",
          "type": "string"
        },
        "nonce": {
          "description": "random nonce",
          "type": "string"
        },
        "user_id": {
          "description": "user who the token is good for",
          "type": "integer"
        }
      },
      "required": [
        "encoded",
        "nonce",
        "iss",
        "exp"
      ],
      "title": "User Token",
      "type": "object"
    }
  },
  "host": "localhost:4000",
  "info": {
    "title": "YourBot API",
    "version": "1.0"
  },
  "paths": {
    "/bots": {
      "get": {
        "description": "list bots",
        "operationId": "YourBotWeb.BotsController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": {
              "data": {
                "items": {
                  "$ref": "#/definitions/Bot"
                },
                "type": "array"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Bots"
        ]
      },
      "post": {
        "description": "create a bot",
        "operationId": "YourBotWeb.BotsController.create",
        "parameters": [
          {
            "description": "bot to create",
            "in": "body",
            "name": "bot",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBot"
            }
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "$ref": "#/definitions/Bot"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Bots"
        ]
      }
    },
    "/bots/{bot_id}": {
      "delete": {
        "description": "delete a bot",
        "operationId": "YourBotWeb.BotsController.delete",
        "parameters": [
          {
            "description": "Bot to delete",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {}
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Bots"
        ]
      },
      "get": {
        "description": "update a bot",
        "operationId": "YourBotWeb.BotsController.show",
        "parameters": [
          {
            "description": "Bot to update",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "$ref": "#/definitions/Bot"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Bots"
        ]
      },
      "patch": {
        "description": "update a bot",
        "operationId": "YourBotWeb.BotsController.update",
        "parameters": [
          {
            "description": "Bot to update",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "bot to update",
            "in": "body",
            "name": "bot",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBot"
            }
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "$ref": "#/definitions/Bot"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Bots"
        ]
      }
    },
    "/bots/{bot_id}/environment_variables": {
      "get": {
        "description": "list env vars for a bot",
        "operationId": "YourBotWeb.EnvironmentVariableController.index",
        "parameters": [
          {
            "description": "Bot ID to use",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "items": {
                  "$ref": "#/definitions/EnvironmentVariable"
                },
                "type": "array"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "EnvironmentVariable"
        ]
      }
    },
    "/bots/{bot_id}/environment_variables/": {
      "post": {
        "description": "create a env var",
        "operationId": "YourBotWeb.EnvironmentVariableController.create",
        "parameters": [
          {
            "description": "Bot ID to use",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "var to create",
            "in": "body",
            "name": "environment_variable",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEnvironmentVariable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "$ref": "#/definitions/EnvironmentVariable"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "EnvironmentVariable"
        ]
      }
    },
    "/bots/{bot_id}/environment_variables/{environment_variable_id}": {
      "delete": {
        "description": "delete an env var",
        "operationId": "YourBotWeb.EnvironmentVariableController.delete",
        "parameters": [
          {
            "description": "Bot to delete",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Environment Variable ID",
            "in": "path",
            "name": "environment_variable_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {}
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "EnvironmentVariable"
        ]
      },
      "get": {
        "description": "show an env var for a bot",
        "operationId": "YourBotWeb.EnvironmentVariableController.show",
        "parameters": [
          {
            "description": "Bot ID to use",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Environment Variable ID",
            "in": "path",
            "name": "environment_variable_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "items": {
                  "$ref": "#/definitions/EnvironmentVariable"
                },
                "type": "array"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "EnvironmentVariable"
        ]
      },
      "patch": {
        "description": "Update a env var",
        "operationId": "YourBotWeb.EnvironmentVariableController.update",
        "parameters": [
          {
            "description": "Bot ID to use",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Environment Variable ID",
            "in": "path",
            "name": "environment_variable_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "var to update",
            "in": "body",
            "name": "environment_variable",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEnvironmentVariable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "items": {
                  "$ref": "#/definitions/EnvironmentVariable"
                },
                "type": "array"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "EnvironmentVariable"
        ]
      }
    },
    "/bots/{bot_id}/events": {
      "get": {
        "description": "list bots",
        "operationId": "YourBotWeb.BotsController.events",
        "parameters": [
          {
            "description": "bot whose log to view",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "items": {
                  "$ref": "#/definitions/BotEvent"
                },
                "type": "array"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Bots"
        ]
      }
    },
    "/bots/{bot_id}/file/{file_id}": {
      "get": {
        "description": "show an env var for a bot",
        "operationId": "YourBotWeb.FileController.show",
        "parameters": [
          {
            "description": "Bot ID to use",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "File ID",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "items": {
                  "$ref": "#/definitions/File"
                },
                "type": "array"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "File"
        ]
      }
    },
    "/bots/{bot_id}/files": {
      "get": {
        "description": "list files for a bot project",
        "operationId": "YourBotWeb.FileController.index",
        "parameters": [
          {
            "description": "Bot ID to use",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "items": {
                  "$ref": "#/definitions/File"
                },
                "type": "array"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "File"
        ]
      }
    },
    "/bots/{bot_id}/files/": {
      "post": {
        "description": "create a file",
        "operationId": "YourBotWeb.FileController.create",
        "parameters": [
          {
            "description": "Bot ID to use",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "File to create",
            "in": "body",
            "name": "file",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "$ref": "#/definitions/File"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "File"
        ]
      }
    },
    "/bots/{bot_id}/files/{file_id}": {
      "delete": {
        "description": "delete an env var",
        "operationId": "YourBotWeb.FileController.delete",
        "parameters": [
          {
            "description": "Bot to delete",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Environment Variable ID",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {}
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "File"
        ]
      },
      "patch": {
        "description": "Update a file",
        "operationId": "YourBotWeb.FileController.update",
        "parameters": [
          {
            "description": "Bot ID to use",
            "in": "path",
            "name": "bot_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "File ID",
            "in": "path",
            "name": "file_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "var to update",
            "in": "body",
            "name": "environment_variable",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "items": {
                  "$ref": "#/definitions/File"
                },
                "type": "array"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "File"
        ]
      }
    },
    "/users/": {
      "post": {
        "description": "create a user",
        "operationId": "YourBotWeb.UsersController.create",
        "parameters": [
          {
            "description": "User to create",
            "in": "body",
            "name": "discord_oauth",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{discord_user_id}": {
      "get": {
        "description": "show a user",
        "operationId": "YourBotWeb.UsersController.show",
        "parameters": [
          {
            "description": "Discord ID",
            "in": "path",
            "name": "discord_user_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{discord_user_id}/bots": {
      "get": {
        "description": "list bots",
        "operationId": "YourBotWeb.BotsController.show_bots_for_user",
        "parameters": [
          {
            "description": "User whose bots to list",
            "in": "path",
            "name": "discord_user_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "items": {
                  "$ref": "#/definitions/Bot"
                },
                "type": "array"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Bots"
        ]
      }
    },
    "/users/{discord_user_id}/token": {
      "post": {
        "description": "generate a token for a user",
        "operationId": "YourBotWeb.UsersController.token",
        "parameters": [
          {
            "description": "Discord ID",
            "in": "path",
            "name": "discord_user_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": {
              "data": {
                "$ref": "#/definitions/UserToken"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "description": "API Token must be provided via `Authorization: Bearer ` header",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "Operations about Users",
      "name": "Users"
    },
    {
      "description": "Operations about Bots",
      "name": "Bots"
    },
    {
      "description": "Operations about env vars",
      "name": "EnvironmentVariable"
    },
    {
      "description": "Operations about project files",
      "name": "File"
    }
  ]
}